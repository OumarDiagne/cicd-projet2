name: Build et push images Docker
on: push

jobs:
  fix-repo-name:
    runs-on: ubuntu-latest
    env:
      OWNER: "${{ github.repository_owner }}"
    steps:
      - name: set lower case owner name
        run: |
          cat $GITHUB_ENV
          echo $OWNER
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
          cat $GITHUB_ENV

  # build-frontend-and-node-api:
  # needs: [fix-repo-name]
  #   runs-on: ubuntu-latest
  #   permissions:
  #   packages: write
  #   strategy:
  #     matrix:
  #       include:
  #         - context_name: "frontend"
  #           image_name: ghcr.io/${{ github.OWNER_LC }}/cicd-projet2/frontend

  #         - context_name: "node-api"
  #           image_name: ghcr.io/${{ github.OWNER_LC }}/cicd-projet2/node-api
  #   steps:
  #     - name: checkout code
  #       uses: actions/checkout@v3
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v3
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3
  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Récupération des métadonnées # Récupère les métadonnées pour Docker
  #       id: metadata # ID pour cette étape
  #       uses: docker/metadata-action@v5 # Utilise l'action de métadonnées
  #       with:
  #         images: ${{ matrix.full_image_name }} # Utilise le nom complet de l'image depuis la matrice
  #     - name: Build and push
  #       uses: docker/build-push-action@v5
  #       with:
  #         push: true
  #         tags: ${{ matrix.image_name }}:latest
  #         context: ./${{ matrix.context_name }}
  #         cache-from: type=gha
  #         cache-to: type=gha,mode=max
